#
# app configuration
#

[main]

debug = true

# collector interval (in seconds)
collector.interval = 60

# number of collector threads
collector.threads = 4

# is collector timestamp in utc or local time
collector.timestamp.utc = false

# InfluxDB
db.host = 127.0.0.1
db.port = 8086
db.username =
db.password =
db.name = timera


#
# httptimer plugin: time http response
#
# Section names should start with "httptimer_plugin_" followed by a unique integer.
#
# name: unique measurement name used to store data in db
#       if proxy is defined, name is: name + '_' + proxy:port
#       for example, if name is "www.google.com" and proxy is "http://proxy.example.com:3128/",
#       name would be: www.google.com_proxy.example.com:3128
# url: http or https url
# method: http method (default is "get" and currently the only supported method)
# ssl_verify: if false, disable SSL verification (default is true)
# proxy: proxy url: http://proxy.example.com:3128/
#        proxy url with basic auth: http://user:pass@proxy.example.com:3128/
#        (default is no proxy)
# include_direct: if true, also include metrics for direct connection (no proxy);
#                 only needs to be true in one section if same url is used in multiple sections
#                 with different proxies (default is false)
#

# global httptimer plugin options
plugins.httptimer.connect_timeout = 10
plugins.httptimer.read_timeout = 10

[httptimer_plugin_01]
name = www.google.com
url = https://www.google.com/

[httptimer_plugin_02]
name = www.apple.com
url = https://www.apple.com/


#
# custom plugin: a custom plugin that gets metrics
#
# Section names should begin with a plugin name + "_plugin_" followed by a unique integer.
#
# The only required section key/value is "plugin_import".
# All section key/value pairs are passed to get_metrics() at each collection interval.
#
# plugin_import: python package[.module] name where "get_metrics" can be imported
#                example using package name only where "get_metrics" is imported or defined in __init__.py:
#                plugin_import = mymetrics
#                example using package.module name where "get_metrics" is imported or defined in metrics.py:
#                plugin_import = mymetrics.metrics
#

#[mymetrics_plugin_01]
#plugin_import = mymetrics.metrics
#name = cpu_load_short
#field = value
